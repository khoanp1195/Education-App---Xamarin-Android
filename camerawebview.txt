using Foundation;
using System;
using UIKit;
using WebKit;

namespace testwebview
{
    public partial class ViewController : UIViewController
    {
        const string JavaScriptFunctionTest =
"navigator.getUserMedia = function() {if (!window.navigator) window.navigator = {};window.navigator.getUserMedia = function(){webkit.messageHandlers.callbackHandler.postMessage(arguments); } })();";

        WKUserContentController userController;
        public ViewController (IntPtr handle) : base (handle)
        {
         

       
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            // Perform any additional setup after loading the view, typically from a nib.


               var  config = new WKWebViewConfiguration();
               userController = config.UserContentController;
               var script = new WKUserScript(new NSString(JavaScriptFunctionTest), injectionTime: WKUserScriptInjectionTime.AtDocumentEnd, isForMainFrameOnly: true);
               userController.AddUserScript(script);
                //  userController.AddScriptMessageHandler(this, "locationHandler");

                config.AllowsInlineMediaPlayback = true;
               

                WKWebView webView = new WKWebView(View.Frame, new WKWebViewConfiguration());
                config.UserContentController.AddUserScript(script);
                View.AddSubview(webView);

                var webConfiguration = new WKWebViewConfiguration();
                webConfiguration.IgnoresViewportScaleLimits = true;
                webConfiguration.SuppressesIncrementalRendering = true;
                webConfiguration.AllowsInlineMediaPlayback = true;
                webConfiguration.AllowsAirPlayForMediaPlayback = false;
                webConfiguration.AllowsPictureInPictureMediaPlayback = true;
                webConfiguration.MediaTypesRequiringUserActionForPlayback = WKAudiovisualMediaTypes.All;
                webConfiguration.RequiresUserActionForMediaPlayback = false;

                var url = new NSUrl("https://webrtc.github.io/samples/src/content/peerconnection/pc1/");
                var request = new NSUrlRequest(url);
                webView.LoadRequest(request);
           
            
        }
    

        public override void DidReceiveMemoryWarning ()
        {
            base.DidReceiveMemoryWarning ();
            // Release any cached data, images, etc that aren't in use.
        }
    }
}
